[
    {
        "id": "a0bb1bfb.40e4c",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6cf2d198.093b18",
        "type": "serial in",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "serial": "6bc1a101.732738",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "2b2051f8.0efe8e"
            ]
        ]
    },
    {
        "id": "bdb3ef63.698888",
        "type": "debug",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 810,
        "y": 120,
        "wires": []
    },
    {
        "id": "4741db5f.266be4",
        "type": "file in",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 180,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "cb92ae91.83f5f8",
        "type": "file",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "filename": "S85-raw_firmware-18feb1039.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 640,
        "y": 220,
        "wires": [
            [
                "bdb3ef63.698888",
                "e802a03.0b88de"
            ]
        ]
    },
    {
        "id": "269f157.01ecb6a",
        "type": "function",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "func": "var binary0 = msg.payload[0].toString(2);\nvar binary1 = msg.payload[1].toString(2);\nvar binary2 = msg.payload[2].toString(2);\nvar binaryString = binary0+binary1+binary2;\nmsg.payload = '0'+binary0+binary1+binary2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 100,
        "wires": [
            [
                "bdb3ef63.698888",
                "17a7638a.987324",
                "cb92ae91.83f5f8",
                "a846ffc3.a655e"
            ]
        ]
    },
    {
        "id": "17a7638a.987324",
        "type": "ui_text",
        "z": "a0bb1bfb.40e4c",
        "group": "f3d82fe3.2dc7d",
        "order": 0,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "text",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "x": 800,
        "y": 60,
        "wires": []
    },
    {
        "id": "a846ffc3.a655e",
        "type": "function",
        "z": "a0bb1bfb.40e4c",
        "name": "Sort binary and make decimal",
        "func": "\nvar c = msg.payload;\nvar binaryArray=[];\nvar i = 0;\nvar binaryString=0;\nvar binaryValue=0;\n\n//Arrange binary string due to rules for Datalogic S85 sensor\nfor(var i=4;i<8;i++){\n    binaryArray.push(c[i]);\n}\nfor(var i=10;i<=15;i++){\n    binaryArray.push(c[i]);\n}\nfor(var i=18;i<=23;i++){\n    binaryArray.push(c[i]);\n}\n\n\n\n\n//MAKE BINARY TO DECIMAL BY USING 2^i BITSHIFT RULE!\n\n//Invert array values, end element to beginning\nvar invertbinaryArray=[];\nfor(var i=0;i<16;i++){\n    invertbinaryArray[i]=binaryArray[15-i];\n}\n\n//Binary to decimal\nfor(var i=0;i<16;i=i+1){\n    binaryValue += (Math.pow(2,i))*Number(invertbinaryArray[i]);\n}\n\n\nmsg.payload  = binaryValue;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 360,
        "wires": [
            [
                "37c3303e.3cbc4"
            ]
        ]
    },
    {
        "id": "5b724b31.120b74",
        "type": "debug",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 890,
        "y": 360,
        "wires": []
    },
    {
        "id": "37c3303e.3cbc4",
        "type": "file",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "filename": "S85-decimal_firmware-18feb1039.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 690,
        "y": 300,
        "wires": [
            [
                "5b724b31.120b74"
            ]
        ]
    },
    {
        "id": "e802a03.0b88de",
        "type": "debug",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 910,
        "y": 220,
        "wires": []
    },
    {
        "id": "2b2051f8.0efe8e",
        "type": "function",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "func": "var binary0 = msg.payload[0].toString(2);\nvar binary1 = msg.payload[1].toString(2);\nvar binary2 = msg.payload[2].toString(2);\nvar binaryString = binary0+binary1+binary2;\nmsg.payload = '0'+binary0+binary1+binary2;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 520,
        "wires": [
            [
                "e84215d4.8059b",
                "2129c0e9.e7a9b"
            ]
        ]
    },
    {
        "id": "e84215d4.8059b",
        "type": "function",
        "z": "a0bb1bfb.40e4c",
        "name": "Sort binary and make decimal",
        "func": "\nvar c = msg.payload;\nvar binaryArray=[];\nvar i = 0;\nvar binaryString=0;\nvar binaryValue=0;\n\n//Arrange binary string due to rules for Datalogic S85 sensor\nfor(var i=4;i<8;i++){\n    binaryArray.push(c[i]);\n}\nfor(var i=10;i<=15;i++){\n    binaryArray.push(c[i]);\n}\nfor(var i=18;i<=23;i++){\n    binaryArray.push(c[i]);\n}\n\n\n\n\n//MAKE BINARY TO DECIMAL BY USING 2^i BITSHIFT RULE!\n\n//Invert array values, end element to beginning\nvar invertbinaryArray=[];\nfor(var i=0;i<16;i++){\n    invertbinaryArray[i]=binaryArray[15-i];\n}\n\n//Binary to decimal\nfor(var i=0;i<16;i=i+1){\n    binaryValue += (Math.pow(2,i))*Number(invertbinaryArray[i]);\n}\n\n\nmsg.payload  = binaryValue;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 500,
        "wires": [
            [
                "b4579dfb.ca2848"
            ]
        ]
    },
    {
        "id": "af015e35.46606",
        "type": "debug",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1210,
        "y": 600,
        "wires": []
    },
    {
        "id": "b4579dfb.ca2848",
        "type": "file",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "filename": "S85-decimal.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 920,
        "y": 620,
        "wires": [
            [
                "af015e35.46606"
            ]
        ]
    },
    {
        "id": "2129c0e9.e7a9b",
        "type": "file",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "filename": "S85-raw.txt",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "x": 890,
        "y": 680,
        "wires": [
            [
                "35517470.4ea8c4"
            ]
        ]
    },
    {
        "id": "35517470.4ea8c4",
        "type": "debug",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1210,
        "y": 660,
        "wires": []
    },
    {
        "id": "a937288b.d852c8",
        "type": "tcp in",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "server": "client",
        "host": "10.0.0.90",
        "port": "4000",
        "datamode": "stream",
        "datatype": "buffer",
        "newline": "#",
        "topic": "",
        "base64": false,
        "x": 150,
        "y": 240,
        "wires": [
            [
                "2b2051f8.0efe8e",
                "94b98f78.18059"
            ]
        ]
    },
    {
        "id": "94b98f78.18059",
        "type": "debug",
        "z": "a0bb1bfb.40e4c",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 440,
        "wires": []
    },
    {
        "id": "6bc1a101.732738",
        "type": "serial-port",
        "z": "",
        "serialport": "/dev/ttyUSB0",
        "serialbaud": "9600",
        "databits": "8",
        "parity": "none",
        "stopbits": "1",
        "newline": "3",
        "bin": "bin",
        "out": "count",
        "addchar": true,
        "responsetimeout": ""
    },
    {
        "id": "f3d82fe3.2dc7d",
        "type": "ui_group",
        "z": "",
        "name": "Reading sensor values",
        "tab": "93159ea.78407e",
        "disp": true,
        "width": "27",
        "collapse": false
    },
    {
        "id": "93159ea.78407e",
        "type": "ui_tab",
        "z": "",
        "name": "S85",
        "icon": "dashboard"
    }
]
